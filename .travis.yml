sudo: required
dist: bionic

group: edge

# whitelist
branches:
  only:
    - master

notifications:
  irc:
    channels:
      - "irc.uvt.nl#gitlama"
    template:
      - "%{repository_slug}#%{build_number}-%{branch} : \
      %{message} --> %{build_url}"
    skip_join: true

language: cpp
matrix:
  include:
    - os: linux
      dist: xenial
      cache: ccache
      compiler: gcc
      env:
        - COMPILER=g++
        - SCAN=echo

    - os: linux
      dist: trusty
      cache: ccache
      compiler: clang++
      env:
        - COMPILER=clang++
        - SCAN=scan-build
        - OPENMPFLAG=--disable-openmp

    - os: osx
      compiler: gcc
      cache:
        directories:
          - $HOME/Library/Caches/Homebrew
      before_cache:
        - brew cleanup
      env:
        - COMPILER=g++
        - SCAN=echo

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-get install pkg-config autoconf-archive ccache cppcheck;
      sudo apt-get install libicu-dev libxml2-dev libbz2-dev zlib1g-dev;
      sudo apt-get install libtar-dev;
      sudo apt-get install libexttextcat-dev;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew install pkg-config;
      brew install autoconf-archive;
      brew install icu4c;
      brew install libxml2;
      brew install bzip2;
      brew install zlib;
      brew install libtar;
      brew install cppcheck;
      brew install ccache;
      brew install libtextcat;
    fi

  - export PATH="/usr/lib/ccache/bin/:/usr/local/opt/ccache/libexec/:$PATH"

  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/ticcutils
  - cd ticcutils
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make CXX=$COMPILER
  - sudo make CXX=$COMPILER install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/libfolia
  - cd libfolia
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make CXX=$COMPILER
  - sudo make CXX=$COMPILER install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/uctodata
  - cd uctodata
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..

install:
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - cppcheck --enable=all --quiet --error-exitcode=0 .
  - $SCAN --status-bugs ./configure
  - $SCAN --status-bugs make CXX=$COMPILER
  - make CXX=$COMPILER
  - sudo make CXX=$COMPILER install

script:
  - cd tests && LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib ./testall >&2

after_failure:
  - cat testoutput/testlang.err
  - tail -n 500 ../config.log
  - tail -n 100 testoutput/*.diff
  - tail -n 100 testoutput/*.err
